#############################################################################
# ORR configuration file for Docker-based installation
#############################################################################

#------------------------------------------------------------------------------------------
# NOTE:
#
# - The ${?...} substitution syntax allows to override settings via environment variables
#   See https://github.com/typesafehub/config#optional-system-or-env-variable-overrides
#
# - The ${a.b.c} substitution syntax in an expression allows to use the value associated
#   with the property a.b.c elsewhere in this file.
#------------------------------------------------------------------------------------------


# --------------------------------------------------------------------------------------------------
# There will be an "admin" user automatically created upon initial start of the ORR.
# This user will have all privileges on your ORR instance.
admin {
  # (required) Set the password to the ORR 'admin' user:
  password = "--actual-admin-password--"

  # (required) Set the email address associated with the ORR 'admin' user:
  email    = "me@example.net"

  # (optional) comma-separated list of usernames that would get admin privilege
  # upon creation of the account:
  #extra    = "foo,bar"
}

# --------------------------------------------------------------------------------------------------
# User authentication
auth {
  # Required: A strong password to generate authentication tokens
  secret = "--actual-strong-password--"
}

# --------------------------------------------------------------------------------------------------
# Info about the deployment of this ORR instance
deployment {
  # url: required. The URL of this ORR instance. No trailing slash.
  url = "http://localhost:9090/ont"
}

# --------------------------------------------------------------------------------------------------
# MongoDB
mongo {
  # the database name. Can be changed if desired.
  db = orr-ont

  # DO NOT change the following but rather adjust `docker-compose.yml`
  # to set the desired corresponding environment variables
  host = ${?MONGO_HOST}
  port = ${?MONGO_PORT}
}

# --------------------------------------------------------------------------------------------------
# files: managed file locations
files {
  # DO NOT change this but rather adjust `docker-compose.yml`
  # to set the desired corresponding host location.
  baseDirectory = /opt/orr-ont-base-directory
}


# --------------------------------------------------------------------------------------------------
# AllegroGraph server (which supports the triple store and SPARQL endpoint)
agraph {
  # The AG username to access the triple store:
  # DO NOT change
  userName = "test"

  # The password for the AG username above:
  # DO NOT change
  password = "xyzzy"

  # the AG repository name for the ORR. Can be changed if desired:
  repoName  = mmiorr

  # DO NOT change the following but rather adjust `docker-compose.yml`
  # to set the desired corresponding host location.
  host = ${?AGRAPH_HOST}
  port = ${?AGRAPH_PORT}

  # DO NOT change:
  sparqlEndpoint = "http://"${agraph.host}":"${agraph.port}/repositories/${agraph.repoName}

  # initDelay: (optional) Re-attempt triple store initialization after this delay.
  initDelay = "20 seconds"
}

# --------------------------------------------------------------------------------------------------
# branding: Note that most of the "branding" is actually done on the front-end side
# (via the `local.config.js`), but we need some pieces here mainly because of the emails
# that are sent to users for purposes of password reset, username recovery and the like.
# See also email section below.
branding {
  # instanceName: used in email messages and other places.
  instanceName = "My ORR"

  # (optional) footer: HTML fragment to be inserted right before </body>
  footer = """
  <div>
    my footer
  </div>
  """
}

# --------------------------------------------------------------------------------------------------
# (Required) email related information used for user account management and notifications.
email {
  # account used for sending emails
  account {
    username = "someone@example.net"
    password = "--actual-password--"
  }

  server {
    host = "smtp.example.net"
    port = 465
    prot = "smtps"
    debug = false
  }

  # info used to compose emails (when user resets password; notifications about registrations):
  from    = ${branding.instanceName}" <orr@example.org>"
  replyTo = "orr@example.org"
  mailer  = ${branding.instanceName}
}

# --------------------------------------------------------------------------------------------------
# Notification settings
notifications {
  # File with list of email addresses (one per line) to be notified of registrations.
  # If given, this file is read every time a notification is to be sent.
  # DO NOT change here but rather adjust `docker-compose.yml`
  # to set the desired corresponding host location.
  recipientsFilename = "/etc/orront/notifyemails"
}

# --------------------------------------------------------------------------------------------------
# recaptcha: optional but highly recommended
# See https://www.google.com/recaptcha/intro/index.html
recaptcha {
  # If defined, the backend will validate recaptcha information provided by the user via request from front-end.
  # The corresponding siteKey must be specified in `local.config.js`
  #privateKey = "..."
}

# --------------------------------------------------------------------------------------------------
# googleAnalytics property ID: optional
googleAnalytics {
  #propertyId = "UA-XXXXX-Y"
}
